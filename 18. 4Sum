class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        if(nums.size()<4)return {};
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
        for(int i=0;i<nums.size()-3;i++){
            if(i>0 && nums[i]==nums[i-1])continue;
            for(int j=i+1;j<nums.size()-2;j++){
                if(j>i+1 && nums[j]==nums[j-1])continue;
                int k=j+1,l=nums.size()-1;
                long long int newtarget=(long long int)((long long int)(target-nums[i])-nums[j]);
                while(k<l){
                    if((long long int)(nums[k]+nums[l])==newtarget){
                        if(!ans.size() || (ans.back()[0]!=nums[i] || ans.back()[1]!=nums[j] || ans.back()[2]!=nums[k] || ans.back()[3]!=nums[l]))
                            ans.push_back({nums[i],nums[j],nums[k],nums[l]});
                        k++;l--;
                    }
                    else if((long long int)(nums[k]+nums[l])<newtarget){
                        k++;
                    }
                    else{
                        l--;
                    }
                }
            }
        }
        return ans;
    }
};
