class Solution {
public:
    vector<pair<int,int>>dir{{-1,0},{0,1},{1,0},{0,-1}};
    int solve(vector<vector<int>>&grid,int total,int i,int j){
        if(grid[i][j]==2){
            return total==1;
        }
        int oldval=grid[i][j];
        grid[i][j]=-1;
        int ans=0;
        for(int k=0;k<4;k++){
            int newi=i+dir[k].first;
            int newj=j+dir[k].second;

            if(newi>=0 && newj>=0 && newi<grid.size() && newj<grid[0].size() && grid[newi][newj]!=-1){
                ans+=solve(grid,total-1,newi,newj);
            }
        }
        grid[i][j]=oldval;
        return ans;
    }
    int uniquePathsIII(vector<vector<int>>& grid) {
        int total=0;
        int sti=0,stj=0;
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){
                if(grid[i][j]==-1)continue;
                if(grid[i][j]==1){
                    sti=i;
                    stj=j;
                }
                total++;
            }
        }

        return solve(grid,total,sti,stj);
    }
};
