class Solution {
public:
	bool isPossible(int N,int P, vector<pair<int, int> >& prerequisites) {
	    vector<vector<int>>adj(N);
	    vector<int>indeg(N,0);
	    for(int i=0;i<P;i++){
	        int u=prerequisites[i].first;
	        int v=prerequisites[i].second;
	        adj[u].push_back(v);
	        indeg[v]++;
	    }
	    queue<int>q;
	    for(int i=0;i<N;i++){
	        if(indeg[i]==0){
	            q.push(i);
	        }
	    }
	    
	    while(!q.empty()){
	        int front=q.front();
	        q.pop();
	        for(auto nodes:adj[front]){
	            indeg[nodes]--;
	            if(indeg[nodes]==0){
	                q.push(nodes);
	            }
	        }
	    }
	    
	    for(int i=0;i<N;i++){
	        if(indeg[i])return false;
	    }
	    return true;
	}
};
