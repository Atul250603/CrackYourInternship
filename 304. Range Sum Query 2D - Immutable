class NumMatrix {
public:
    vector<vector<int>>pre;
    NumMatrix(vector<vector<int>>& matrix) {
        pre.resize(matrix.size());
        for(int i=0;i<matrix.size();i++){
            pre[i].resize(matrix[0].size());
        }

        for(int i=0;i<matrix.size();i++){
            pre[i][0]=matrix[i][0];
            for(int j=1;j<matrix[0].size();j++){
                pre[i][j]=pre[i][j-1]+matrix[i][j];
            }
        }
        for(int i=0;i<matrix.size();i++){
            for(int j=0;j<matrix[0].size();j++){
                cout<<pre[i][j]<<" ";
            }
            cout<<endl;
        }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        int ans=0;
        for(int i=row1;i<=row2;i++){
            if(col1>0)
                ans+=(pre[i][col2]-pre[i][col1-1]);
            else
                ans+=(pre[i][col2]);
        }

        return ans;
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */
