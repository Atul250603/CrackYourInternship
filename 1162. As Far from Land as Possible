class Solution {
    vector<pair<int,int>>dir{{-1,0},{0,1},{1,0},{0,-1}};
public:
    
    int maxDistance(vector<vector<int>>& grid) {
        int n=grid.size();
        queue<pair<int,pair<int,int>>>q;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1){
                    q.push({0,{i,j}});
                }
            }
        }
        int ans=-1;
        while(!q.empty()){
            auto front=q.front();
            q.pop();
            int dis=front.first;
            int i=front.second.first;
            int j=front.second.second;
            for(int k=0;k<4;k++){
                int newi=i+dir[k].first;
                int newj=j+dir[k].second;
                if(newi>=0 && newj>=0 && newi<n && newj<n && grid[newi][newj]==0){
                    ans=max(ans,dis+1);
                    grid[newi][newj]=1;
                    q.push({dis+1,{newi,newj}});
                }
            }
        }
        return ans;
    }
};
