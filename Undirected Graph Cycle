class Solution {
  public:
    // Function to detect cycle in an undirected graph.
    bool isCycle(int V, vector<int> adj[]) {
          vector<int>visited(V,0);
        queue<pair<int,int>>q;
        for(int i=0;i<V;i++){
            if(!visited[i]){
        q.push({i,-1});
      
        visited[i]=1;
        while(!q.empty()){
            auto front=q.front();
            q.pop();
            int node=front.first;
            int prnt=front.second;
            for(auto nodes:adj[node]){
                if(!visited[nodes]){visited[nodes]=1;q.push({nodes,node});}
                else if(nodes!=prnt)return true;
            }
        }
            }
        }
        return false;
    }
};
