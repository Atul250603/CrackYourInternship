class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int>mp;
        for(int i=0;i<nums.size();i++){
            mp[nums[i]]++;
        }

        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;

        for(auto val:mp){
            int num=val.first;
            int cnt=val.second;
            if(pq.size()<k){
                pq.push({cnt,num});
            }
            else{
                if(pq.top().first<cnt){
                    pq.pop();
                    pq.push({cnt,num});
                }
            }
        }

        vector<int>ans;

        while(!pq.empty()){
            ans.push_back(pq.top().second);
            pq.pop();
        }

        return ans;
    }
};
