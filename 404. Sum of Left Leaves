/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode *&root,int &ans,int &type){
        if(!root)return;
        if(!root->left && !root->right){
            if(type==1){ //left movement
                ans=ans+root->val;
            }
            return;
        }
        type=1;
        solve(root->left,ans,type);
        type=2;
        solve(root->right,ans,type);
    }
    int sumOfLeftLeaves(TreeNode* root) {
        int ans=0;
        int type=0;
        solve(root,ans,type);
        return ans;
    }
};
