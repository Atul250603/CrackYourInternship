#define mod 1000000007
class Solution {
public:
    vector<pair<int,int>>dir{{-2,1},{-1,2},{2,1},{1,2},{1,-2},{2,-1},{-2,-1},{-1,-2}};
    vector<vector<int>>tmp;
    Solution(){
        tmp={{1,2,3},{4,5,6},{7,8,9},{-1,0,-1}};
    }
    int solve(int i,int j,int n,vector<vector<vector<int>>>&dp){
        if(n==0){
            return 1;
        }
        if(dp[i][j][n]!=-1)return dp[i][j][n];
        int val=0;
        for(int k=0;k<8;k++){
            int newi=i+dir[k].first;
            int newj=j+dir[k].second;

            if(newi>=0 && newj>=0 && newi<4 && newj<3 && tmp[newi][newj]!=-1){
                val=val%mod + solve(newi,newj,n-1,dp)%mod;
            }
        }

        return dp[i][j][n]=val%mod;
    }
    int knightDialer(int n) {
        int ans=0;
        vector<vector<vector<int>>>dp(4,vector<vector<int>>(3,vector<int>(n+1,-1)));
        for(int i=0;i<4;i++){
            for(int j=0;j<3;j++){
                if(tmp[i][j]!=-1){
                    ans=(ans%mod + solve(i,j,n-1,dp)%mod)%mod;
                }
            }
        }

        return ans%mod;
    }
};
